- hosts: 'SRV_DNS'
  become: yes
  tasks:
    - name: Update packages
      apt:
        update_cache: yes
        upgrade: "yes"
        autoremove: True

    - name: Set timezone
      command: timedatectl set-timezone Europe/Bratislava

    - name: Set hostname
      hostname:
        name: "SRV-DNS"

    - name: Install nano text editor
      apt:
        name: nano
        state: present
        update_cache: yes

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Create directory for Docker Compose
      file:
        path: "/home/{{ ansible_user }}/.docker/cli-plugins"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Get latest Docker Compose release tag
      uri:
        url: "https://api.github.com/repos/docker/compose/releases/latest"
        return_content: yes
      register: compose_release

    - name: Download Docker Compose binary
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ compose_release.json.tag_name }}/docker-compose-linux-x86_64"
        dest: "/home/{{ ansible_user }}/.docker/cli-plugins/docker-compose"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Verify Docker Compose binary permissions
      command: chmod +x /home/{{ ansible_user }}/.docker/cli-plugins/docker-compose

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Create container directory
      file:
        path: "/home/{{ ansible_user }}/SRV-DNS"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Download docker-compose.yaml
      get_url:
        url: "https://raw.githubusercontent.com/marioqqq/HoneyLab/main/SRV-DNS/docker-compose.yaml"
        dest: "/home/{{ ansible_user }}/SRV-DNS/docker-compose.yaml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Download .env file
      get_url:
        url: "https://raw.githubusercontent.com/marioqqq/HoneyLab/main/SRV-DNS/.env"
        dest: "/home/{{ ansible_user }}/SRV-DNS/.env"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Disable DNSStubListener in /etc/systemd/resolved.conf
      lineinfile:
        path: /etc/systemd/resolved.conf
        regexp: '^#?DNSStubListener='
        line: 'DNSStubListener=no'
        backup: yes

    - name: Remove existing /etc/resolv.conf symlink or file
      file:
        path: /etc/resolv.conf
        state: absent

    - name: Link /etc/resolv.conf to /run/systemd/resolve/resolv.conf
      file:
        src: /run/systemd/resolve/resolv.conf
        dest: /etc/resolv.conf
        state: link

    - name: Restart systemd-resolved
      systemd:
        name: systemd-resolved
        state: restarted
        enabled: yes

    - name: Get the primary network interface name
      set_fact:
        primary_interface: "{{ ansible_default_ipv4.interface }}"

    - name: Create netplan config to use Pi-hole for DNS
      copy:
        dest: /etc/netplan/99-pihole-dns.yaml
        content: |
          network:
            version: 2
            ethernets:
              {{ primary_interface }}:
                dhcp4: true
                dhcp4-overrides:
                  use-dns: false
                nameservers:
                  addresses: [127.0.0.1]

    - name: Apply Netplan configuration
      command: netplan apply