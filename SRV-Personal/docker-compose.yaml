services:
  # Common
  protainer-agent:
    container_name: protainer-agent
    image: portainer/agent:latest
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - personal
    restart: unless-stopped

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bratislava
      - WATCHTOWER_MONITOR_ONLY=false
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 6 0 * * 0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - personal
    restart: unless-stopped

  # Specific
  docmost:
    container_name: docmost
    image: docmost/docmost:latest
    ports:
      - 4000:3000
    environment:
      - APP_URL=${APP_URL}
      - APP_SECRET=${APP_SECRET}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=public
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./docmost:/app/data/storage
    depends_on:
      - postgres
      - redis
    networks:
      - personal    
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    user: 0:0
    depends_on:
      - mariadb
    networks:
      - personal
    restart: unless-stopped

  homepage:
    container_name: homepage
    image: ghcr.io/gethomepage/homepage:latest
    ports:
      - 3080:3000
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bratislava
      - HOMEPAGE_ALLOWED_HOSTS=${ALLOWED_HOST1},${ALLOWED_HOST2}
    volumes:
      - ./homepage/config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    env_file: .env
    networks:
      - personal
    restart: unless-stopped

  mariadb:
    container_name: mariadb
    image: lscr.io/linuxserver/mariadb:latest
    ports:
      - 3306:3306
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bratislava
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mariadb/config:/config
      - ./mariadb/init.sql:/config/initdb.d/init.sql:ro # Comment if you don't want to initialize database
    networks:
      - personal
    restart: unless-stopped

  nocodb:
    container_name: nocodb
    image: nocodb/nocodb:latest
    ports:
      - 8080:8080
    volumes:
      - ./nocodb/data:/usr/app/data
    depends_on:
      - mariadb
    networks:
      - personal
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./postgres:/var/lib/postgresql/data
    networks:
      - personal
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - ./redis:/data
    networks:
      - personal
    restart: unless-stopped

  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:latest
    ports:
      - 80:80
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bratislava
      - ADMIN_TOKEN=${ADMIN_TOKEN}
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=false
      - INVITATIONS_ALLOWED=true
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME}
      - SMTP_SECURITY=${SMTP_SECURITY}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - DOMAIN=${DOMAIN}
    volumes:
      - ./vaultwarden/data:/data
    networks:
      - personal
    restart: unless-stopped

networks:
  personal:
    name: personal
    driver: bridge